{"message":"unused imports: `convert`, `hash::Hash`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":431,"byte_end":438,"line_start":8,"line_end":8,"column_start":11,"column_end":18,"is_primary":true,"text":[{"text":"use std::{convert, collections::{HashMap, BTreeMap, HashSet}, hash::Hash};","highlight_start":11,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"lib_tx_pool/src/pool.rs","byte_start":483,"byte_end":493,"line_start":8,"line_end":8,"column_start":63,"column_end":73,"is_primary":true,"text":[{"text":"use std::{convert, collections::{HashMap, BTreeMap, HashSet}, hash::Hash};","highlight_start":63,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":431,"byte_end":440,"line_start":8,"line_end":8,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"use std::{convert, collections::{HashMap, BTreeMap, HashSet}, hash::Hash};","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"lib_tx_pool/src/pool.rs","byte_start":481,"byte_end":493,"line_start":8,"line_end":8,"column_start":61,"column_end":73,"is_primary":true,"text":[{"text":"use std::{convert, collections::{HashMap, BTreeMap, HashSet}, hash::Hash};","highlight_start":61,"highlight_end":73}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `convert`, `hash::Hash`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_tx_pool/src/pool.rs:8:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{convert, collections::{HashMap, BTreeMap, HashSet}, hash::Hash};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `Signature`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":556,"byte_end":565,"line_start":10,"line_end":10,"column_start":24,"column_end":33,"is_primary":true,"text":[{"text":"use lib_chain::block::{Signature, Transaction, TxId, BlockId, BlockNode};","highlight_start":24,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":556,"byte_end":567,"line_start":10,"line_end":10,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"use lib_chain::block::{Signature, Transaction, TxId, BlockId, BlockNode};","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Signature`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_tx_pool/src/pool.rs:10:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse lib_chain::block::{Signature, Transaction, TxId, BlockId, BlockNode};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `tx`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":2191,"byte_end":2193,"line_start":47,"line_end":47,"column_start":30,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn add_tx(&mut self, tx: Transaction) -> bool {","highlight_start":30,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":2191,"byte_end":2193,"line_start":47,"line_end":47,"column_start":30,"column_end":32,"is_primary":true,"text":[{"text":"    pub fn add_tx(&mut self, tx: Transaction) -> bool {","highlight_start":30,"highlight_end":32}],"label":null,"suggested_replacement":"_tx","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `tx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_tx_pool/src/pool.rs:47:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_tx(&mut self, tx: Transaction) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_tx`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `tx_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":2599,"byte_end":2604,"line_start":56,"line_end":56,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn del_tx(&mut self, tx_id: TxId) -> () {","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":2599,"byte_end":2604,"line_start":56,"line_end":56,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"    pub fn del_tx(&mut self, tx_id: TxId) -> () {","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":"_tx_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `tx_id`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_tx_pool/src/pool.rs:56:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m56\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn del_tx(&mut self, tx_id: TxId) -> () {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_tx_id`\u001b[0m\n\n"}
{"message":"unused variable: `max_count`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":3102,"byte_end":3111,"line_start":67,"line_end":67,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"    pub fn filter_tx(&self, max_count: u16, excluding_txs: & Vec<Transaction>) -> Vec<Transaction> {","highlight_start":29,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":3102,"byte_end":3111,"line_start":67,"line_end":67,"column_start":29,"column_end":38,"is_primary":true,"text":[{"text":"    pub fn filter_tx(&self, max_count: u16, excluding_txs: & Vec<Transaction>) -> Vec<Transaction> {","highlight_start":29,"highlight_end":38}],"label":null,"suggested_replacement":"_max_count","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `max_count`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_tx_pool/src/pool.rs:67:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn filter_tx(&self, max_count: u16, excluding_txs: & Vec<Transaction>) -> Vec<Transaction> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_max_count`\u001b[0m\n\n"}
{"message":"unused variable: `excluding_txs`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":3118,"byte_end":3131,"line_start":67,"line_end":67,"column_start":45,"column_end":58,"is_primary":true,"text":[{"text":"    pub fn filter_tx(&self, max_count: u16, excluding_txs: & Vec<Transaction>) -> Vec<Transaction> {","highlight_start":45,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":3118,"byte_end":3131,"line_start":67,"line_end":67,"column_start":45,"column_end":58,"is_primary":true,"text":[{"text":"    pub fn filter_tx(&self, max_count: u16, excluding_txs: & Vec<Transaction>) -> Vec<Transaction> {","highlight_start":45,"highlight_end":58}],"label":null,"suggested_replacement":"_excluding_txs","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `excluding_txs`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_tx_pool/src/pool.rs:67:45\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn filter_tx(&self, max_count: u16, excluding_txs: & Vec<Transaction>) -> Vec<Transaction> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_excluding_txs`\u001b[0m\n\n"}
{"message":"unused variable: `finalized_blocks`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":3437,"byte_end":3453,"line_start":74,"line_end":74,"column_start":56,"column_end":72,"is_primary":true,"text":[{"text":"    pub fn remove_txs_from_finalized_blocks(&mut self, finalized_blocks: &Vec<BlockNode>) {","highlight_start":56,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":3437,"byte_end":3453,"line_start":74,"line_end":74,"column_start":56,"column_end":72,"is_primary":true,"text":[{"text":"    pub fn remove_txs_from_finalized_blocks(&mut self, finalized_blocks: &Vec<BlockNode>) {","highlight_start":56,"highlight_end":72}],"label":null,"suggested_replacement":"_finalized_blocks","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `finalized_blocks`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_tx_pool/src/pool.rs:74:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m74\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn remove_txs_from_finalized_blocks(&mut self, finalized_blocks: &Vec<BlockNode>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_finalized_blocks`\u001b[0m\n\n"}
{"message":"constant `MAX_TX_POOL` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"lib_tx_pool/src/pool.rs","byte_start":721,"byte_end":732,"line_start":13,"line_end":13,"column_start":7,"column_end":18,"is_primary":true,"text":[{"text":"const MAX_TX_POOL: usize = 10000;","highlight_start":7,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: constant `MAX_TX_POOL` is never used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_tx_pool/src/pool.rs:13:7\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst MAX_TX_POOL: usize = 10000;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"8 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 8 warnings emitted\u001b[0m\n\n"}
