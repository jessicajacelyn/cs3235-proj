{"message":"unused import: `convert`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":525,"byte_end":532,"line_start":10,"line_end":10,"column_start":54,"column_end":61,"is_primary":true,"text":[{"text":"use std::{collections::{BTreeMap, HashMap, HashSet}, convert};","highlight_start":54,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":523,"byte_end":532,"line_start":10,"line_end":10,"column_start":52,"column_end":61,"is_primary":true,"text":[{"text":"use std::{collections::{BTreeMap, HashMap, HashSet}, convert};","highlight_start":52,"highlight_end":61}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `convert`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_chain/src/block.rs:10:54\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{collections::{BTreeMap, HashMap, HashSet}, convert};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `digest::block_buffer::Block`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":599,"byte_end":626,"line_start":12,"line_end":12,"column_start":28,"column_end":55,"is_primary":true,"text":[{"text":"use sha2::{Sha256, Digest, digest::block_buffer::Block};","highlight_start":28,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":597,"byte_end":626,"line_start":12,"line_end":12,"column_start":26,"column_end":55,"is_primary":true,"text":[{"text":"use sha2::{Sha256, Digest, digest::block_buffer::Block};","highlight_start":26,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `digest::block_buffer::Block`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_chain/src/block.rs:12:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse sha2::{Sha256, Digest, digest::block_buffer::Block};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `block`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":8805,"byte_end":8810,"line_start":181,"line_end":181,"column_start":33,"column_end":38,"is_primary":true,"text":[{"text":"    pub fn add_block(&mut self, block: BlockNode, leading_zero_len: u16) -> () {","highlight_start":33,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":8805,"byte_end":8810,"line_start":181,"line_end":181,"column_start":33,"column_end":38,"is_primary":true,"text":[{"text":"    pub fn add_block(&mut self, block: BlockNode, leading_zero_len: u16) -> () {","highlight_start":33,"highlight_end":38}],"label":null,"suggested_replacement":"_block","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `block`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_chain/src/block.rs:181:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_block(&mut self, block: BlockNode, leading_zero_len: u16) -> () {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_block`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `leading_zero_len`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":8823,"byte_end":8839,"line_start":181,"line_end":181,"column_start":51,"column_end":67,"is_primary":true,"text":[{"text":"    pub fn add_block(&mut self, block: BlockNode, leading_zero_len: u16) -> () {","highlight_start":51,"highlight_end":67}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":8823,"byte_end":8839,"line_start":181,"line_end":181,"column_start":51,"column_end":67,"is_primary":true,"text":[{"text":"    pub fn add_block(&mut self, block: BlockNode, leading_zero_len: u16) -> () {","highlight_start":51,"highlight_end":67}],"label":null,"suggested_replacement":"_leading_zero_len","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `leading_zero_len`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_chain/src/block.rs:181:51\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m181\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add_block(&mut self, block: BlockNode, leading_zero_len: u16) -> () {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_leading_zero_len`\u001b[0m\n\n"}
{"message":"unused variable: `block_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":9030,"byte_end":9038,"line_start":189,"line_end":189,"column_start":29,"column_end":37,"is_primary":true,"text":[{"text":"    pub fn get_block(&self, block_id: BlockId) -> Option<BlockNode> {","highlight_start":29,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":9030,"byte_end":9038,"line_start":189,"line_end":189,"column_start":29,"column_end":37,"is_primary":true,"text":[{"text":"    pub fn get_block(&self, block_id: BlockId) -> Option<BlockNode> {","highlight_start":29,"highlight_end":37}],"label":null,"suggested_replacement":"_block_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `block_id`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_chain/src/block.rs:189:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m189\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_block(&self, block_id: BlockId) -> Option<BlockNode> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_block_id`\u001b[0m\n\n"}
{"message":"unused variable: `since_block_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":9574,"byte_end":9588,"line_start":198,"line_end":198,"column_start":46,"column_end":60,"is_primary":true,"text":[{"text":"    pub fn get_finalized_blocks_since(&self, since_block_id: BlockId) -> Vec<BlockNode> {","highlight_start":46,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":9574,"byte_end":9588,"line_start":198,"line_end":198,"column_start":46,"column_end":60,"is_primary":true,"text":[{"text":"    pub fn get_finalized_blocks_since(&self, since_block_id: BlockId) -> Vec<BlockNode> {","highlight_start":46,"highlight_end":60}],"label":null,"suggested_replacement":"_since_block_id","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `since_block_id`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_chain/src/block.rs:198:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn get_finalized_blocks_since(&self, since_block_id: BlockId) -> Vec<BlockNode> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_since_block_id`\u001b[0m\n\n"}
{"message":"unused variable: `leading_zero_len`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":13511,"byte_end":13527,"line_start":288,"line_end":288,"column_start":34,"column_end":50,"is_primary":true,"text":[{"text":"    pub fn validate_block(&self, leading_zero_len: u16) -> (bool, BlockId) {","highlight_start":34,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"lib_chain/src/block.rs","byte_start":13511,"byte_end":13527,"line_start":288,"line_end":288,"column_start":34,"column_end":50,"is_primary":true,"text":[{"text":"    pub fn validate_block(&self, leading_zero_len: u16) -> (bool, BlockId) {","highlight_start":34,"highlight_end":50}],"label":null,"suggested_replacement":"_leading_zero_len","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `leading_zero_len`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mlib_chain/src/block.rs:288:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m288\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn validate_block(&self, leading_zero_len: u16) -> (bool, BlockId) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_leading_zero_len`\u001b[0m\n\n"}
{"message":"7 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 7 warnings emitted\u001b[0m\n\n"}
